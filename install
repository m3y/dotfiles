#!/bin/bash

set -e -o pipefail

BASEBACKUPDIR="${HOME}/.dotfiles.bak"
BACKUPDIR=${BASEBACKUPDIR}/`date +%Y%m%d%H%M%S`
CURRENT=`pwd`
LISTFILE='target_list'

mkbakdir() {
  [ -d ${BASEBACKUPDIR} ] || mkdir ${BASEBACKUPDIR}
  [ -d ${BACKUPDIR} ] || mkdir -p ${BACKUPDIR}
}

backup() {
  local TARGET=$1
  mkbakdir
  local DIRNAME=`dirname ${BACKUPDIR}/$1`
  if [ ${BACKUPDIR} != ${DIRNAME} ]; then
    mkdir -p ${DIRNAME}
  fi
  mv ${HOME}/$1 ${DIRNAME}
}

exists() {
  local TARGET=$1
  local TYPE=`file -b ${TARGET}`
  if [ "${TYPE}" == "directory" ]; then
    [ -d ${HOME}/${TARGET} ]
  else
    [ -f ${HOME}/${TARGET} ]
  fi
}

createlink() {
  local TARGET=$1
  mkdir -p `dirname ${HOME}/${TARGET}`
  ln -s ${CURRENT}/${TARGET} ${HOME}/${TARGET}
}

dotfiles() {
  for FILE in .??*; do
    [ "${FILE}" = ".git" ] && continue
    [ "${FILE}" = ".gitconfig.local" ] && continue

    if [ "${FILE}" = ".config" ]; then
        for CONFIGFILE in .config/*; do
          echo ${CONFIGFILE}
        done
    else
      echo ${FILE}
    fi
  done
}

# main
echo -e "\n  Install the following files."
dotfiles | while read FILE; do echo "    "${FILE}; done
echo ""
read -p "  OK? (y/N): " yn

if [ "y" != "${yn}" ]; then
  exit 1
fi

dotfiles | while read FILE; do
  echo "===== ${FILE} ====="
  [ -L ${HOME}/${FILE} ] && unlink ${HOME}/${FILE} && echo "${FILE} unlinked"
  exists ${FILE} && backup ${FILE} && echo "Backup ${FILE}"
  createlink ${FILE} && echo "Create a '${FILE}' symlink"
done
